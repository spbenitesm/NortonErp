@model NortonMvc.Models.Ordene

@{
    ViewBag.Title = "Crear";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Crear</h2>


<div class="form-horizontal">
    <h4>Ordene</h4>
    <hr />
    @using (Html.BeginForm("Crear", "Orden"))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OrdenCodigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenCodigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenCodigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenTipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenTipo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenTipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenFecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenFecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenFecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenProveedor, "OrdenProveedor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OrdenProveedor", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrdenProveedor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenSubtotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenSubtotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenSubtotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenIgv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenIgv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenIgv, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenPlazoEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenPlazoEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenPlazoEntrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenFormaPago, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenFormaPago, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenFormaPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenContactoInterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenContactoInterno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenContactoInterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenLugarEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenLugarEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenLugarEntrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenEstado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenEstado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenEstado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenObservacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenObservacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenObservacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenMotivoRechazo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenMotivoRechazo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenMotivoRechazo, "", new { @class = "text-danger" })
            </div>
        </div>
        <button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#EdicionDetalle">Nuevo Detalle</button>
    }
    <div id="divListaDetalle">
        @Html.Partial("_ListaDetalle", new List<NortonMvc.Models.OrdenesDetalle>())
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" id="EdicionDetalle">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Detalle de Orden</h4>
                </div>
                <div class="modal-body">
                    @Html.Partial("_CrearDetalle", new NortonMvc.Models.OrdenesDetalle())
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="GuardarDetalle">Guardar</button>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear Orden" class="btn btn-primary" />
        </div>
    </div>
</div>

@Html.Partial("_confirm")
<script type="text/javascript">
    var id;
    var confirmador;

    $("#EdicionDetalle").on("show.bs.modal", function (event) {
        var button = $(event.relatedTarget);
        $("#OrdenDetalleId").val('');
        $("#OrdenDetalleItem").val('');
        $("#OrdenDetalleDescripcion").val('');
        $("#OrdenDetalleCuotas").val('');
        $("#OrdenDetalleUnidad").val('');
        $("#OrdenDetallePrecioUnitario").val('');
        $("#OrdenDetallePrecioTotal").val('');
    });
    $("#GuardarDetalle").click(function () {
        $.validator.unobtrusive.parse("#detalle");
        $("#detalle").validate();
        if ($("#detalle").valid()) {
            var OrdenesDetalle = {
                OrdenDetalleId: $("#OrdenDetalleId").val(),
                OrdenDetalleItem: $("#OrdenDetalleItem").val(),
                OrdenDetalleDescripcion: $("#OrdenDetalleDescripcion").val(),
                OrdenDetalleCuotas: $("#OrdenDetalleCuotas").val(),
                OrdenDetalleUnidad: $("#OrdenDetalleUnidad").val(),
                OrdenDetallePrecioUnitario: $("#OrdenDetallePrecioUnitario").val(),
                OrdenDetallePrecioTotal: $("#OrdenDetallePrecioTotal").val()
            };
            guardarDetalle(OrdenesDetalle);
            $("#EdicionDetalle").modal("hide");
        }
    });

    var guardarDetalle = function (detalle) {
        $.post('@Url.Action("GuardarDetalle")', detalle, function (data, status, jq) {
            $("#divListaDetalle").html(data);
        }).always(function () {
            $("#divListaDetalle").find("[data-target=#EdicionDetalle]").click(function () {
                id = $(this).attr("data-id");
                $.get('@Url.Action("Edit")', { id: id }, function (data, status, jq) {
                    $("#EdicionDetalle").find(".modal-body").html(data);
                });
                $("#EdicionDetalle").modal('show');
            });
            $("#divListaDetalle").find("[data-target=#confirmar]").click(function () {
                id = $(this).attr("data-id");
                confirmador = confirmar(function (id) {
                    $.get('@Url.Action("Borrar")', { id: id }, function (data, status, jq) {
                        $("#EdicionDetalle").find(".modal-body").html(data);
                    });
                });
                confirmador.abrir();
            });
        });
    };
</script>
